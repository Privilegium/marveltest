{"version":3,"sources":["components/appHeader/AppHeader.js","components/spinner/Spinner.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/app/App.js","index.js"],"names":["AppHeader","className","href","Spinner","xmlns","style","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ErrorMessage","objectFit","src","img","alt","MarvelService","_apiBase","_apiKey","_baseOffset","getResourse","url","a","fetch","res","ok","Error","status","json","getAllCharacters","offset","data","results","map","_transformCharacter","getCharacter","id","char","name","description","thumbnail","path","extension","homepage","urls","wiki","comics","items","RandomChar","state","loading","error","marvelService","onCharLoaded","setState","onCharLoading","updateCharacter","Math","floor","random","then","catch","onError","this","errorMessage","spinner","content","onClick","mjolnir","Component","View","noImgStyle","CharList","charList","newItemLoading","charEnded","onRequest","onCharListLoading","onCharListLoaded","newCharList","end","length","charListRef","elem","activeChar","itemRefs","setRef","ref","push","focusOnItem","forEach","item","classList","remove","add","focus","arr","elements","i","props","onCharSelected","tabIndex","onKeyPress","e","key","renderItems","disabled","Skeleton","CharInfo","updateChar","charId","prevProps","skeleton","resourceURI","ErrorBoundary","errorInfo","children","App","selectedChar","decoration","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1f66baa8.chunk.js","sourcesContent":["import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#\">Characters</a></li>\n                    /\n                    <li><a href=\"#\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","const Spinner = () => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\n            <g transform=\"translate(80,50)\">\n            <g transform=\"rotate(0)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\n            <g transform=\"rotate(45)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(50,80)\">\n            <g transform=\"rotate(90)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\n            <g transform=\"rotate(135)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(20,50.00000000000001)\">\n            <g transform=\"rotate(180)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\n            <g transform=\"rotate(225)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(49.99999999999999,20)\">\n            <g transform=\"rotate(270)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\n            <g transform=\"rotate(315)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\n            </circle>\n            </g>\n            </g>\n        </svg>\n    )\n}\n\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif'\n\nconst ErrorMessage = () => {\n    return (\n        <img style={{display: 'block', width: '250px', height: '250px', objectFit: 'contain', margin: '0 auto'}} src={img} alt=\"Error\" />\n    )\n}\n\nexport default ErrorMessage;","\n\nclass MarvelService {\n    _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n    _apiKey = 'apikey=9f4afd4268723c9cc79c0e0b0ffb3f5c';\n    _baseOffset = 255;\n\n\n    getResourse = async (url) => {\n        let res = await fetch(url);\n\n        if (!res.ok) {\n            throw new Error(`Could not fetch ${url}, status: ${res.status}`)\n        }\n\n        return await res.json();\n    }\n\n    getAllCharacters = async (offset = this._baseOffset) => {\n        const res = await this.getResourse(`${this._apiBase}characters?limit=9&offset=${offset}&${this._apiKey}`)\n        return res.data.results.map(this._transformCharacter);\n    }\n\n    getCharacter = async (id) => {\n        const res = await this.getResourse(`${this._apiBase}characters/${id}?${this._apiKey}`)\n        return this._transformCharacter(res.data.results[0])\n    }\n\n    _transformCharacter = (char) => {\n        return {\n            name: char.name,\n            description: char.description === '' ? 'There is no info about this character' : char.description,\n            thumbnail: `${char.thumbnail.path}.${char.thumbnail.extension}`,\n            homepage: char.urls[0].url,\n            wiki: char.urls[1].url,\n            id: char.id,\n            comics: char.comics.items\n        }\n    }\n}\n\nexport default MarvelService;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { Component } from 'react/cjs/react.production.min';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport MarvelService from '../../services/MarvelService';\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nclass RandomChar extends Component {\n\n    state = {\n        char: {},\n        loading: true, \n        error: false\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.updateCharacter();\n    }\n\n    onCharLoaded = (char) => {\n        this.setState({\n            char,\n            loading: false\n        });\n    }\n\n    onCharLoading = () => {\n        this.setState({\n            loading: true\n        })\n    }\n\n    updateCharacter = () => {\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n        this.onCharLoading()\n        this.marvelService\n            .getCharacter(id)\n            .then(this.onCharLoaded)\n            .catch(this.onError)\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        })\n    }\n\n    render() {  \n        const {char, loading, error} = this.state\n        const errorMessage = error ? <ErrorMessage/> : null\n        const spinner = loading ? <Spinner/> : null\n        const content = !(loading || error) ? <View char={char}/> : null\n\n        return (\n            <div className=\"randomchar\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <div className=\"randomchar__static\">\n                    <p className=\"randomchar__title\">\n                        Random character for today!<br/>\n                        Do you want to get to know him better?\n                    </p>\n                    <p className=\"randomchar__title\">\n                        Or choose another one\n                    </p>\n                    <button className=\"button button__main\" onClick={this.updateCharacter}>\n                        <div className=\"inner\">try it</div>\n                    </button>\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki} = char;\n    let noImgStyle = \"\";\n    \n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        noImgStyle = {objectFit: 'contain'}\n    } else {\n        noImgStyle = {objectFit: 'cover'}    \n    }\n\n    return (\n        <div className=\"randomchar__block\">\n            <img style={noImgStyle} src={thumbnail} alt=\"Random character\" className=\"randomchar__img\"/>\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">\n                    {description}\n                </p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RandomChar;","import React, { Component } from 'react/cjs/react.production.min';\nimport PropTypes from 'prop-types';\n\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport MarvelService from '../../services/MarvelService';\n\nimport './charList.scss';\n\nclass CharList extends Component {\n\n    state = {\n        charList: [],\n        loading: true,\n        error: false,\n        offset: 225,\n        newItemLoading: false,\n        charEnded: false\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.onRequest()\n    }\n\n    onRequest = (offset) => {\n        this.onCharListLoading()\n        this.marvelService\n            .getAllCharacters(offset)\n            .then(this.onCharListLoaded)\n            .catch(this.onError)\n    }\n\n    // My version\n    // onRequest = () => {\n    //     this.marvelService\n    //     .getAllCharacters(this.state.offset)\n    //     .then(res => {\n    //         res.forEach(item => {\n    //             this.state.charList.push(item)\n    //         });\n    //         this.setState({\n    //             offset: this.state.offset + 9,\n    //         });\n    //     })\n    //     .catch(this.onError)\n    // }\n\n    onCharListLoading = () => {\n        this.setState({\n            newItemLoading: true\n        })\n    }\n\n    onCharListLoaded = (newCharList) => {\n        let end = false\n        if (newCharList.length < 9) {\n            end = true\n        }\n\n        this.setState(({offset, charList}) => ({\n            charList: [...charList, ...newCharList],\n            loading: false,\n            newItemLoading: false,\n            offset: offset + 9,\n            charEnded: end\n        }))\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        })\n    }\n\n    charListRef = elem => {\n        this.charListRef = elem;\n    }\n\n    activeChar = id => {\n        this.charListRef = id\n    }\n\n    itemRefs = [];\n\n    setRef = (ref) => {\n        this.itemRefs.push(ref);\n    }\n\n    focusOnItem = (id) => {\n        this.itemRefs.forEach(item => item.classList.remove('char__item_selected'));\n        this.itemRefs[id].classList.add('char__item_selected');\n        this.itemRefs[id].focus();\n    }\n\n    renderItems(arr) {\n        const elements = arr.map((item, i) => {\n            const {name, thumbnail, id} = item;\n            let noImgStyle = {objectFit: 'cover'};\n        \n            if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                noImgStyle = {objectFit: 'unset'}\n            }\n\n            return (\n                <li \n                    onClick={() => {\n                        this.props.onCharSelected(id);\n                        this.focusOnItem(i);\n                    }} \n                    className=\"char__item\" \n                    key={id}\n                    tabIndex={0}\n                    ref={this.setRef}\n                    onKeyPress={(e) => {\n                        if (e.key === ' ' || e.key === \"Enter\") {\n                            this.props.onCharSelected(item.id);\n                            this.focusOnItem(i);\n                        }\n                    }}>\n                    <img style={noImgStyle} src={thumbnail} alt={name}/>\n                    <div className=\"char__name\">{name}</div>\n                </li>\n            )\n        })\n\n        return(\n            <ul className=\"char__grid\">\n                {elements}\n            </ul>\n        )\n    \n    }\n\n    render() {\n        const {charList, loading, error, newItemLoading, offset, charEnded} = this.state\n\n        const elements = this.renderItems(charList);\n\n        const errorMessage = error ? <ErrorMessage/> : null\n        const spinner = loading ? <Spinner/> : null\n        const content = !(loading || error) ? elements : null\n\n        return (\n            <div className=\"char__list\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <button \n                    onClick={() => this.onRequest(offset)} \n                    style={{'display': charEnded ? 'none' : 'block'}}\n                    className=\"button button__main button__long\"\n                    disabled={newItemLoading}>\n                    <div className=\"inner\">load more</div>\n                </button>\n            </div>\n        )    \n    }\n}\n\nCharList.propTypes = {\n    onCharSelected: PropTypes.func\n}\n\nexport default CharList; ","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { Component } from 'react/cjs/react.production.min';\nimport PropTypes from 'prop-types';\n\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton'\nimport MarvelService from '../../services/MarvelService';\n\nimport './charInfo.scss';\n\nclass CharInfo extends Component {\n\n    state = {\n        char: null,\n        loading: false,\n        error: false\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.updateChar()\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.charId !== prevProps.charId) {\n            this.updateChar()   \n        }\n    }\n\n    updateChar = () => {\n        const {charId} = this.props \n        if (!charId) {\n            return\n        }\n\n        this.onCharLoading()\n\n        this.marvelService\n            .getCharacter(charId)\n            .then(this.onCharLoaded)\n            .catch(this.onError)\n    }\n\n    onCharLoaded = (char) => {\n        this.setState({\n            char,\n            loading: false\n        })\n    }\n\n    onCharLoading = () => {\n        this.setState({\n            loading: true\n        })\n    }\n\n    onError = () => {\n        this.setState({\n            error: true\n        })\n    }\n\n    render() {\n        const {char, loading, error} = this.state\n        \n        const skeleton = char || loading || error ? null : <Skeleton/>,\n              errorMessage = error ? <ErrorMessage/> : null,\n              spinner = loading ? <Spinner/> : null,\n              content = !(loading || error || !char) ? <View char={char}/> : null;    \n\n        return (\n            <div className=\"char__info\">\n                {skeleton}\n                {errorMessage}\n                {spinner}\n                {content}\n            </div>\n        )\n    }\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki, comics} = char\n    let noImgStyle = {objectFit: 'cover'};\n\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        noImgStyle = {objectFit: 'unset'}\n    }\n\n    return (\n        <>\n            <div className=\"char__basics\">\n                <img style={noImgStyle} src={thumbnail} alt={name}/>\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n                {description}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {   comics.length === 0 ? \"No comics available\" :\n                    comics.map((item, i) => {\n                        const {resourceURI, name} = item;\n                        // eslint-disable-next-line\n                        if (i > 9) return;\n\n                        return (\n                            <li className=\"char__comics-item\" key={i}>\n                                <a href={resourceURI}>{name}</a>\n                            </li>\n                        )\n                    })\n                }\n            </ul>\n        </>\n    )\n}\n\nCharInfo.propTypes = {\n    charId: PropTypes.number\n}\n\nexport default CharInfo;","import { Component } from \"react/cjs/react.production.min\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\n\nclass ErrorBoundary extends Component {\n    state = {\n        error: false\n    }\n\n    componentDidCatch(error, errorInfo) {\n        this.setState({\n            error: true\n        })\n    }\n\n    render() {\n        if (this.state.error) {\n            return (\n                <ErrorMessage/>\n            )\n        }\n\n        return this.props.children\n    }\n}\n\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { Component } from \"react/cjs/react.production.min\";\n\nimport AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\n\nimport decoration from '../../resources/img/vision.png';\n\nclass App extends Component {\n\n    state = {\n        selectedChar: null\n    }\n\n    onCharSelected = (id) => {\n        this.setState({\n            selectedChar: id\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"app\">\n                <AppHeader/>\n                <main>\n                    <ErrorBoundary>\n                        <RandomChar/>\n                    </ErrorBoundary>\n                    <div className=\"char__content\">\n                        <ErrorBoundary>\n                            <CharList onCharSelected={this.onCharSelected}/>     \n                        </ErrorBoundary>\n                        <CharInfo charId={this.state.selectedChar}/>\n                    </div>\n                    <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\n                </main>\n            </div>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\n\nimport './style/style.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n  );\n"],"sourceRoot":""}